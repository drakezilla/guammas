<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ComentarioAnuncio', 'doctrine');

/**
 * BaseComentarioAnuncio
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $comentario
 * @property integer $usuario_id
 * @property integer $denunciado
 * @property integer $comentario_padre_id
 * @property integer $anuncio_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property DenunciaComentario $DenunciaComentario
 * @property Anuncio $Anuncio
 * @property Doctrine_Collection $ComentarioAnuncio
 * @property Usuario $Usuario
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getComentario()          Returns the current record's "comentario" value
 * @method integer             getUsuarioId()           Returns the current record's "usuario_id" value
 * @method integer             getDenunciado()          Returns the current record's "denunciado" value
 * @method integer             getComentarioPadreId()   Returns the current record's "comentario_padre_id" value
 * @method integer             getAnuncioId()           Returns the current record's "anuncio_id" value
 * @method timestamp           getCreatedAt()           Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()           Returns the current record's "updated_at" value
 * @method DenunciaComentario  getDenunciaComentario()  Returns the current record's "DenunciaComentario" value
 * @method Anuncio             getAnuncio()             Returns the current record's "Anuncio" value
 * @method Doctrine_Collection getComentarioAnuncio()   Returns the current record's "ComentarioAnuncio" collection
 * @method Usuario             getUsuario()             Returns the current record's "Usuario" value
 * @method ComentarioAnuncio   setId()                  Sets the current record's "id" value
 * @method ComentarioAnuncio   setComentario()          Sets the current record's "comentario" value
 * @method ComentarioAnuncio   setUsuarioId()           Sets the current record's "usuario_id" value
 * @method ComentarioAnuncio   setDenunciado()          Sets the current record's "denunciado" value
 * @method ComentarioAnuncio   setComentarioPadreId()   Sets the current record's "comentario_padre_id" value
 * @method ComentarioAnuncio   setAnuncioId()           Sets the current record's "anuncio_id" value
 * @method ComentarioAnuncio   setCreatedAt()           Sets the current record's "created_at" value
 * @method ComentarioAnuncio   setUpdatedAt()           Sets the current record's "updated_at" value
 * @method ComentarioAnuncio   setDenunciaComentario()  Sets the current record's "DenunciaComentario" value
 * @method ComentarioAnuncio   setAnuncio()             Sets the current record's "Anuncio" value
 * @method ComentarioAnuncio   setComentarioAnuncio()   Sets the current record's "ComentarioAnuncio" collection
 * @method ComentarioAnuncio   setUsuario()             Sets the current record's "Usuario" value
 * 
 * @package    guammas
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComentarioAnuncio extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comentario_anuncio');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('comentario', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('denunciado', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('comentario_padre_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('anuncio_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DenunciaComentario', array(
             'local' => 'id',
             'foreign' => 'id'));

        $this->hasOne('Anuncio', array(
             'local' => 'anuncio_id',
             'foreign' => 'id'));

        $this->hasMany('ComentarioAnuncio', array(
             'local' => 'id',
             'foreign' => 'comentario_padre_id'));

        $this->hasOne('Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id'));
    }
}