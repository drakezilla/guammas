<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Organizacion', 'doctrine');

/**
 * BaseOrganizacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre_organizacion
 * @property string $logotipo
 * @property integer $categoria_id
 * @property string $facebook_organizacion
 * @property string $twitter_organizacion
 * @property string $googleplus_organizacion
 * @property string $pagina_web
 * @property string $documento
 * @property integer $verificada
 * @property integer $usuario_id
 * @property integer $activa
 * @property string $salt
 * @property string $token
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Categoria $Categoria
 * @property Usuario $Usuario
 * @property Doctrine_Collection $Seguidor
 * @property Doctrine_Collection $TagOrganizacion
 * @property Doctrine_Collection $Ubicacion
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method string              getNombreOrganizacion()      Returns the current record's "nombre_organizacion" value
 * @method string              getLogotipo()                Returns the current record's "logotipo" value
 * @method integer             getCategoriaId()             Returns the current record's "categoria_id" value
 * @method string              getFacebookOrganizacion()    Returns the current record's "facebook_organizacion" value
 * @method string              getTwitterOrganizacion()     Returns the current record's "twitter_organizacion" value
 * @method string              getGoogleplusOrganizacion()  Returns the current record's "googleplus_organizacion" value
 * @method string              getPaginaWeb()               Returns the current record's "pagina_web" value
 * @method string              getDocumento()               Returns the current record's "documento" value
 * @method integer             getVerificada()              Returns the current record's "verificada" value
 * @method integer             getUsuarioId()               Returns the current record's "usuario_id" value
 * @method integer             getActiva()                  Returns the current record's "activa" value
 * @method string              getSalt()                    Returns the current record's "salt" value
 * @method string              getToken()                   Returns the current record's "token" value
 * @method timestamp           getCreatedAt()               Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()               Returns the current record's "updated_at" value
 * @method Categoria           getCategoria()               Returns the current record's "Categoria" value
 * @method Usuario             getUsuario()                 Returns the current record's "Usuario" value
 * @method Doctrine_Collection getSeguidor()                Returns the current record's "Seguidor" collection
 * @method Doctrine_Collection getTagOrganizacion()         Returns the current record's "TagOrganizacion" collection
 * @method Doctrine_Collection getUbicacion()               Returns the current record's "Ubicacion" collection
 * @method Organizacion        setId()                      Sets the current record's "id" value
 * @method Organizacion        setNombreOrganizacion()      Sets the current record's "nombre_organizacion" value
 * @method Organizacion        setLogotipo()                Sets the current record's "logotipo" value
 * @method Organizacion        setCategoriaId()             Sets the current record's "categoria_id" value
 * @method Organizacion        setFacebookOrganizacion()    Sets the current record's "facebook_organizacion" value
 * @method Organizacion        setTwitterOrganizacion()     Sets the current record's "twitter_organizacion" value
 * @method Organizacion        setGoogleplusOrganizacion()  Sets the current record's "googleplus_organizacion" value
 * @method Organizacion        setPaginaWeb()               Sets the current record's "pagina_web" value
 * @method Organizacion        setDocumento()               Sets the current record's "documento" value
 * @method Organizacion        setVerificada()              Sets the current record's "verificada" value
 * @method Organizacion        setUsuarioId()               Sets the current record's "usuario_id" value
 * @method Organizacion        setActiva()                  Sets the current record's "activa" value
 * @method Organizacion        setSalt()                    Sets the current record's "salt" value
 * @method Organizacion        setToken()                   Sets the current record's "token" value
 * @method Organizacion        setCreatedAt()               Sets the current record's "created_at" value
 * @method Organizacion        setUpdatedAt()               Sets the current record's "updated_at" value
 * @method Organizacion        setCategoria()               Sets the current record's "Categoria" value
 * @method Organizacion        setUsuario()                 Sets the current record's "Usuario" value
 * @method Organizacion        setSeguidor()                Sets the current record's "Seguidor" collection
 * @method Organizacion        setTagOrganizacion()         Sets the current record's "TagOrganizacion" collection
 * @method Organizacion        setUbicacion()               Sets the current record's "Ubicacion" collection
 * 
 * @package    guammas
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrganizacion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('organizacion');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre_organizacion', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('logotipo', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('categoria_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('facebook_organizacion', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('twitter_organizacion', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('googleplus_organizacion', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('pagina_web', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('documento', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('verificada', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('activa', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('salt', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('token', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Categoria', array(
             'local' => 'categoria_id',
             'foreign' => 'id'));

        $this->hasOne('Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id'));

        $this->hasMany('Seguidor', array(
             'local' => 'id',
             'foreign' => 'organizacion_id'));

        $this->hasMany('TagOrganizacion', array(
             'local' => 'id',
             'foreign' => 'organizacion_id'));

        $this->hasMany('Ubicacion', array(
             'local' => 'id',
             'foreign' => 'organizacion_id'));
    }
}