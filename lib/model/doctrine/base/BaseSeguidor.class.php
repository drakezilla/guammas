<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Seguidor', 'doctrine');

/**
 * BaseSeguidor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $usuario_id
 * @property integer $empresa_id
 * @property integer $activo
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Organizacion $Organizacion
 * @property Usuario $Usuario
 * 
 * @method integer      getId()           Returns the current record's "id" value
 * @method integer      getUsuarioId()    Returns the current record's "usuario_id" value
 * @method integer      getEmpresaId()    Returns the current record's "empresa_id" value
 * @method integer      getActivo()       Returns the current record's "activo" value
 * @method timestamp    getCreatedAt()    Returns the current record's "created_at" value
 * @method timestamp    getUpdatedAt()    Returns the current record's "updated_at" value
 * @method Organizacion getOrganizacion() Returns the current record's "Organizacion" value
 * @method Usuario      getUsuario()      Returns the current record's "Usuario" value
 * @method Seguidor     setId()           Sets the current record's "id" value
 * @method Seguidor     setUsuarioId()    Sets the current record's "usuario_id" value
 * @method Seguidor     setEmpresaId()    Sets the current record's "empresa_id" value
 * @method Seguidor     setActivo()       Sets the current record's "activo" value
 * @method Seguidor     setCreatedAt()    Sets the current record's "created_at" value
 * @method Seguidor     setUpdatedAt()    Sets the current record's "updated_at" value
 * @method Seguidor     setOrganizacion() Sets the current record's "Organizacion" value
 * @method Seguidor     setUsuario()      Sets the current record's "Usuario" value
 * 
 * @package    guammas
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSeguidor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('seguidor');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('activo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Organizacion', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id'));
    }
}